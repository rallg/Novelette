%%
%% This is file Novelette-Fonts.sty,
%% part of Novelette document class.
%% Copyright 2022 Robert Allgeyer.
%%
%% It may be used, distributed, and/or modified under the
%% conditions of the MIT License. See:
%% https://opensource.org/licenses/MIT
%% 
%%
\ProvidesFile{Novelette-Fonts.sty}%
[2022/06/22 v0.0.1 LuaLaTeX file (font settings and defaults)]
%%


%% INITIALIZATION
%% ----------------------------------------------------------------------------
% Novelette uses the `fontspec' package for sophisticated font choices.
% Fonts are not activated until \AtEndPreamble. Until then, the basic TeX fonts
% are temporarily specified, so that packages can load without complaint.
% These are Latin Modern fonts, which are Open Type and will work, but are not
% stylistically suitable for works of fiction. The only reason they are
% used here, is because just about every TeX installation has them.
\gdef\rmdefault{lmr} % Latin Modern Roman
\gdef\sfdefault{lmss} % Latin Modern Sans
\gdef\ttdefault{lmtt} % Latin Modern Mono

% The following might become unnecessary if fontspec adds the capability to
% disable keys. For now: Color and Opacity cannot be used as font features,
% for a black/white printed book. Alas, fontspec over-rules xcolor.
% So, this code over-rules fontspec:
\gdef\@CheckFontspecFeatures#1{%
  \@tempTFfalse%
  \IfSubStr{#1}{Color}{\@tempTFtrue}{}%
  \IfSubStr{#1}{Colour}{\@tempTFtrue}{}%
  \IfSubStr{#1}{color}{\@tempTFtrue}{}%
  \IfSubStr{#1}{colour}{\@tempTFtrue}{}%
  \IfSubStr{#1}{Opacity}{\@tempTFtrue}{}%
  \IfSubStr{#1}{opacity}{\@tempTFtrue}{}%
  \if@tempTF%
    \ClassError{Novelette}{Color and Opacity forbidden as font features}%
    {You defined a font, or added a font feature, with Color or Opacity. ^^J%
     That is disallowed in Novelette.}%
  \fi%
} % End \@CheckFontspecFeatures.

% Default font features (will be changed later):
\defaultfontfeatures{} % Reset.
\defaultfontfeatures{SmallCapsFeatures={Renderer=Basic},Ligatures=TeX,} % All.
\defaultfontfeatures[\sffamily]{Kerning=On} % Sans font only uses kerning.



%% Font classes.
% \setfont{which}{family name}[features]
% Where 'which' is one of:  main header footnote titling delegate deco
% {main} is the main body text. Default: Swainson.
% {header} is used in page headers. Default: Swainson, scaled 0.88.
% {footnote} is used in footnotes. Default: SwainsonNote, scaled 0.88
% {titling} is used in chapter titles. Default: SwainsonTitling, scaled 1.6.
% {delegate} provides substitute characters for above fonts (but not deco).
% Default delegate: Libertinus Serif. Not pre-installed; you may never need it.
% {deco} used for decorative text, such as title, on book title page.
% Default deco is Swainson, scaled 2.5. Better if you choose something stylish.

% When you \setfont{main}, then your choice will also become the header,
% footnote, titling, and deco fonts, with appropriate scale.
% If you need other fonts, you must set each one, possibly with its features.


\newcommand\my@nosuchfont{%
  \ClassError{Novelette}{\string\setfont\space requested font not installed}%
  {The second argument of \string\setfont\space requests a font family. ^^J%
   But that font was not found. Install it. Or, try this: ^^J%
   Refresh file database (command: mktexlsr). ^^J%
   Clear LuaTeX font cache (command: luaotfload-tool --cache=erase).}%
}

\DeclareDocumentCommand\setfont { m m O{} } {
  \@tempTFfalse
  \ifthenelse{\equal{#1}{main}}{
    \@tempTFtrue
    \IfFontExistsTF{#2}{
      \setmainfont{#2}[#3]
      \newfontfamily\mainfont{#2}[#3]
      \gdef\my@mainfontname{#2}
    }{
      \my@nosuchfont
    }
  }{}
  \ifthenelse{\equal{#1}{header}}{
    \@tempTFtrue
    \IfFontExistsTF{#2}{
      \newfontfamily\headerfont{#2}[#3]
    }{
      \newfontfamily\headerfont{\my@mainfontname}[Scale=0.88]
      \ClassWarning{Novelette}{Did not find requested header font. ^^J%
       Using default Swainson instead, scale 0.88.}
    }
  }{}
  \ifthenelse{\equal{#1}{footnote}}{
    \@tempTFtrue
    \IfFontExistsTF{#2}{
      \newfontfamily\footnotefont{#2}[#3]
    }{
      \newfontfamily\footnotefont{\my@mainfontname}[Scale=0.88]
      \ClassWarning{Novelette}{Did not find requested footnote font. ^^J%
       Using main font instead, at scale 0.88.}
    }
  }{}
  \ifthenelse{\equal{#1}{titling}}{
    \@tempTFtrue
    \IfFontExistsTF{#2}{
      \newfontfamily\titlingfont{#2}[#3]
    }{
      \newfontfamily\titlingfont{\my@mainfontname}[Scale=1.6]
      \ClassWarning{Novelette}{Did not find requested titling font. ^^J%
       Using main font instead, at scale 1.6.}
    }
  }{}
  \ifthenelse{\equal{#1}{deco}}{
    \@tempTFtrue
    \IfFontExistsTF{#2}{
      \newfontfamily\decofont{#2}[#3]
    }{
      \newfontfamily\decofont{\my@mainfontname}[Scale=2.5]
      \ClassWarning{Novelette}{Did not find requested deco font. ^^J%
       Using main font instead, at scale 2.5.}
    }
  }{}
  \ifthenelse{\equal{#1}{delegate}}{ % Usually not requested.
    \@tempTFtrue
    \IfFontExistsTF{#2}{
      \newfontfamily\delegate{#2}[#3]
    }{
      \IfFontExistsTF{Libertinus Serif}{
        \newfontfamily\delegate{Libertinus Serif}[Scale=0.94]
        \ClassWarning{Novelette}{Did not find requested delegate font. ^^J%
         But found Libertinus Serif. Using it instead, scale 0.94.}
      }{
        \ClassWarning{Novelette}{Did not find requested delegate font. ^^J%
         Also did not find default delegate, Libertinus Serif. ^^J%
         No delegate. Using ordinary font.}
      }
    }
  }{}
  \if@tempTF\else
    \ClassError{Novelette}{Bad font class in \string\setfont}%
     {First argument is one of: main header footer titling delegate deco}
  \fi
} % End \setfont.
%% Defaults:
\setfont{main}{Swainson}
\setfont{header}{Swainson}[Scale=0.88]
\setfont{footnote}{SwainsonNote}[Scale=0.88]
\setfont{titling}{SwainsonTitling}[Scale=1.6]
\setfont{deco}{Swainson}[Scale=2.5]
%%


%% ACTIVATE FONTS \AtEndPreamble
%% ----------------------------------------------------------------------------
\gdef\@ActivateFonts{% Called \AtEndPreamble.
  %%%%% Nothing.
} % end \@ActivateFonts, called by `Novelette.cls' \AtEndPreamble.
%%


%%
\endinput
%%
%% End of file Novelette-Fonts.sty.


